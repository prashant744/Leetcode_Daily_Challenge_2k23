class Solution {
public:
    bool helper(int mid,vector<int>&weights,int n,int days){
        int sum=0,d=1;
        for(int i=0;i<n;i++){
            if(sum+weights[i]<=mid){
                sum+=weights[i];
            }else{
                sum=weights[i];
                d++;
            }
        }
        if(d<=days)return true;
        return false;
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int n=weights.size();
        int sum=0,maxi=INT_MIN;
        for(int i=0;i<n;i++){
            sum+=weights[i];
            maxi=max(maxi,weights[i]);
        }
        int ans=0;
        int low=maxi;
        int high=sum;
        int mid=0;
        while(low<=high){
            mid=(low+high)/2;
            if(helper(mid,weights,n,days)){
                ans=mid;
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
};