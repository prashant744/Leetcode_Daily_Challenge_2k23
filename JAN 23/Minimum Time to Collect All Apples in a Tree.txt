class Solution {
public:
    pair<int,int>dfs(int node,int p){
        pair<int,int>v={0,fruits[node]};
        for(auto it:adj[node]){
            if(it!=p){
                auto x=dfs(it,node);
                v.first+=(2+x.first)*x.second;
                v.second|=x.second;
            }
        }
        return v;
    }
    vector<bool>fruits;
    vector<int>adj[100005];
    int minTime(int n, vector<vector<int>>& edges, vector<bool>& hasApple) {
        for(int i=0;i<(int)edges.size();i++){
            adj[edges[i][0]].push_back(edges[i][1]);
            adj[edges[i][1]].push_back(edges[i][0]);
        }
        fruits=hasApple;
        return dfs(0,0).first;
    }
};