class Solution {
public:
    
    bool is_possible(vector<int>& time, long long mid, int totalTrips){
        int n = time.size();
        long trips = 0;
        for(int i = 0; i < n; i++){
            trips += (mid / time[i]);
        }        
        return trips >= totalTrips;
    }
    
    long long minimumTime(vector<int>& time, int totalTrips) {
        
        int n = time.size();
        long long low = 1;
        long long high = 1e14;
        long long ans = 1;       
        while(low <= high){
            long long mid = low + (high - low) / 2;            
            if(is_possible(time, mid, totalTrips)){
                ans = mid;                
                high = mid - 1;
            }else{
                low = mid + 1;
            }
        }
        return ans;
    }
};s